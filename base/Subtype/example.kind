Is_evenS: Subtype(Nat)
  Subtype.new!((x) (x % 2)  == 0)

Is_even: Type
  Subtype.new.type!((x) 0 == x % 2)
  //Sigma.fst!!(IsEvenS)

Is_evenIsSubtype: Subtype(Nat)
   Subtype.by_definition!!(Is_even, refl) 

Is_even.0 : Is_even
  0 ~ refl

Is_even.2 : Is_even
  2 ~ refl


test (s: Is_even): Nat
   open s
   s.fst

// This trick does not work directly in general, so I wrote Subtype.cast.
cast_nat<T: Subtype(Nat)>(s: Sigma.fst!!(T)): Nat
  Subtype.cast!!(s)
